1. binary search of a target in a integer array

public int search(int[] nums, int target) {
        int start = 0;
        int end = nums.length;
        int com = (start+end)/2;
        while (start < end){
            if (target < nums[com]){
                end = com;
                com = (start+end)/2;
            }else if(target > nums[com]){
                start = com;
                com = (start+end)/2;
            }else{
                return com;
            }
                
            }
        return -1;
        }
        
    
 2. building my own hash set
 class MyHashSet {
     ArrayList<Integer> keyset ;

    public MyHashSet() {
        keyset = new ArrayList<Integer>();
    }
    
    public void add(int key) {
        if (keyset.contains(key)){
            
        }else{
            keyset.add(key);
        }
        
        
    }
    
    public void remove(int key) {
        for(int i = 0;i < keyset.size();i++){
            if (keyset.get(i) == key){
                keyset.remove(i);
            }else{
                
            }
        }
        
    }
    
    public boolean contains(int key) {
        for (int i =0; i < keyset.size();i++){
            if ( keyset.get(i) == key){
                return true;
            }
        }
        return false;
        
    }
}

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet obj = new MyHashSet();
 * obj.add(key);
 * obj.remove(key);
 * boolean param_3 = obj.contains(key);
 */
